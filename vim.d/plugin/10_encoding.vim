" ======================================================== "
"                         Encoding                         "
" ======================================================== "


" ----------------------------------------------------------
" Set Internal Encoding (for buffer and string processing)
" 設定 vim 內部編碼，也就是 vim 在處理文字時所使用的編碼
" (包含在 buffer 中儲存的資料)
" ----------------------------------------------------------
" Notes:
" 若有處理文字時發現無法解讀的字元，將被丟棄，所以要盡可能
" 設定能兼容越多字元的編碼，因此一般來說 unicode 最通用。
" ----------------------------------------------------------
set encoding=utf-8


" ----------------------------------------------------------
" Auto Detect file encoding
" 自動偵測檔案編碼
" ----------------------------------------------------------
" Notes:
"   fileencoding:
"     為開啟檔案時所用來解讀的編碼，同時也作為儲存時使用的
"     編碼。
"
"     如果編碼錯誤導致讀取失敗，需使用 :e ++enc=<encoding>
"     重新開啟檔案，直接 set encoding=<encoding> 並不會讓
"     vim 重新讀檔。
"
"     如果只是希望指定存檔編碼，則直接 set 即可。
"
"   fileencodings:
"     為在 vim 自動猜測 fileencoding 的依據，vim 會由前向後
"     猜測編碼，當解讀時沒有遇到錯誤，即選用該編碼。因此越
"     是「特殊」或「嚴謹」的編碼要放越前面。
"
"     比方說 latin1 是單純把每個 byte 解讀成字母，所以所有
"     字元都不會出錯，應當放在最後。
"
"     而 utf-8 會在文字中塞入特殊字元做標記，因此應當放最前
"     面。
"
" 一般來說不會直接設定 fileencoding，如果猜測失敗或要用特定
" 編碼儲存時，才會用上述方式指定。
"
" More info:
" http://edyfox.codecarver.org/html/vim_fileencodings_detection.html
" ----------------------------------------------------------
set fileencodings=ucs-bom,utf-8,big5,cp936,gb18030,euc-jp,euc-kr,latin1


" ----------------------------------------------------------
" Set terminal encoding (for display)
" 設定終端機顯示編碼
" ----------------------------------------------------------
" vim 在顯示字元時會將內部編碼轉碼成終端編碼，如果轉換失敗，
" 可能顯示亂碼、問號或顯示不出來，但只要不意外將其刪除，存擋
" 時並不會造成缺漏。
"
" 因此一般來說會將 encoding 設定成能相容越多字元的編碼，而
" termencoding 才設定為與環境相同的編碼。
"
" termencoding 未設定的話，會自動使用 locale 的設定，所以一
" 般來說不會刻意設定 termencoding。
"
" 只有當與終端機設定不符時，才以 set tenc=<encoding> 直接指
" 定。
" ----------------------------------------------------------
" set termencoding=big5


" ----------------------------------------------------------
" Set end-of-line formats
" 設定 EOL 格式
" ----------------------------------------------------------
" Notes:
"   fileformat:
"     用來指定 EOL 格式。
"
"     unix: <NL>
"     dos:  <CR><NL>
"     macL  <CR>
"
"   fileformats:
"     用來指定可用的 EOL 格式，無關順序。
"
"     當只有一個值被設定，則強制取代 fileformat 設定。
"
"     當有多個值被設定， vim 會自動偵測檔案內現有的 EOL 來
"     自動決定。
" ----------------------------------------------------------
set fileformats=unix,dos,mac


" ---------------------------------------------------------
" Show single or double width for ambiguous characters.
" 將不明字寬的字元顯示為單字寬或雙字寬。
" ---------------------------------------------------------
" Notes:
" 不明字寬是指如歐元、註冊商標、智財權標誌等字元
" 由於在東西方語言中皆會使用，因此字寬不明。
"
" 顯示為單字寬應能滿足大部分情況，但有時候對於整段都是 CJK
" (中日韓) 等雙字寬文字時，你可能會希望將這些符號也顯示成
" 雙字寬。
" ---------------------------------------------------------
" set ambiwidth=double


